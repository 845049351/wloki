import struct
from rpc_pb2 import WirePayload

def read_int32(sck):
    data = readall(sck, 4)
    if not data:
        return None
    i, = struct.unpack(">I", data)
    return i

def int32_to_bytes(i):
    return struct.pack(">I", i)

def readall(sck, sz):
    total = sz
    buf = ''
    while total > 0:
        b = sck.recv(total)
        if not b:
            return None
        total -= len(b)
        buf += b
    return buf

def send_payload(sck, payload):
    buf = payload.SerializeToString()
    out_buf = int32_to_bytes(len(buf)) + buf
    sck.sendall(out_buf)

def read_payload_response(sck):
    sz = read_int32(sck)
    if sz == None:
        return None
    buf = readall(sck, sz)
    payload = WirePayload()
    payload.ParseFromString(buf)
    return payload

class RpcException(Exception):
    pass
