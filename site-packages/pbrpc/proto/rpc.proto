package DOMAIN.rpc;

option java_package = "com.DOMAIN.rpc.proto";
option java_outer_classname = "RpcProtos";
option java_generic_services = true;
option py_generic_services = true;
//option optimize_for = SPEED;
enum AuthMethod {
    SIMPLE = 0;
    DIGEST_MD5 = 1;
    KERBEROS = 2;
}

message ConnectRequest {
    required fixed32 version = 1;
}

message ConnectResponse {
    repeated AuthMethod auth_method = 1;
    required string protocol = 2;
    required string server_name = 3;
}

message InitialAuthRequest {
    required AuthMethod auth_method = 1;
    required bytes initial_response = 2;
}

message AuthRequest {
    required bytes response = 1;
}

message AuthResponse {
    required bool complete = 1;
    optional bytes challenge = 2;
}

message PropertiesRequest {
    required string client_host_name = 1;
    required int32 client_port = 2;
    required string client_pid = 3;
}

message PropertiesResponse {
    required string server_pid = 1;
}

message InitError {
    required string error = 1;
}

message RpcRequest {
    required int32 call_id = 1;
    required string service_identifier = 2;
    required string method_identifier = 3;
    required bytes request_bytes = 4;
    optional int32 timeout_ms = 5;
}

message RpcResponse {
    required int32 call_id = 1;
    required bytes response_bytes = 2;
}

message RpcCancel {
    required int32 call_id_to_cancel = 1;
}

message RpcError {
    required int32 call_id = 1;
    required string error = 2;
    optional bytes java_exception = 3;
}

message WirePayload {
    optional ConnectRequest connect_request = 1;
    optional ConnectResponse connect_response = 2;
    optional InitialAuthRequest initial_auth_request = 3;
    optional AuthRequest auth_request = 4;
    optional AuthResponse auth_response = 5;
    optional PropertiesRequest properties_request = 6;
    optional PropertiesResponse properties_response = 7;
    optional InitError init_error = 8;
    optional RpcRequest rpc_request = 9;
    optional RpcResponse rpc_response = 10;
    optional RpcCancel rpc_cancel = 11;
    optional RpcError rpc_error = 12;
}
